#include <stdio.h>
#include <stdlib.h>

struct Job {
    char id;
    int deadline;
    int profit;
};

int compare(const void* a, const void* b) {
    struct Job* jobA = (struct Job*)a;
    struct Job* jobB = (struct Job*)b;
    return jobB->profit - jobA->profit;
}

int jobScheduling(struct Job jobs[], int n) {
    qsort(jobs, n, sizeof(struct Job), compare);
    int maxDeadline = 0;
    for (int i = 0; i < n; i++)
        if (jobs[i].deadline > maxDeadline)
            maxDeadline = jobs[i].deadline;
    int result[maxDeadline];
    for (int i = 0; i < maxDeadline; i++)
        result[i] = -1;
    int totalProfit = 0;
    for (int i = 0; i < n; i++) {
        for (int j = jobs[i].deadline - 1; j >= 0; j--) {
            if (result[j] == -1) {
                result[j] = i;
                totalProfit += jobs[i].profit;
                break;
            }
        }
    }
    for (int i = 0; i < maxDeadline; i++)
        if (result[i] != -1)
            printf("Job %c scheduled at slot %d\n", jobs[result[i]].id, i + 1);
    return totalProfit;
}

int main() {
    struct Job jobs[] = {
        {'a', 2, 100}, {'b', 1, 19}, {'c', 2, 27},
        {'d', 1, 25}, {'e', 3, 15}
    };
    int n = sizeof(jobs) / sizeof(jobs[0]);
    int totalProfit = jobScheduling(jobs, n);
    printf("Total Profit: %d\n", totalProfit);
    return 0;
}
